
// TYPOGRAPHY
@mixin extra-light {
  font-weight: 100;
}

@mixin light {
  font-weight: 200;
}

@mixin regular {
  font-weight: 400;
}

@mixin semi-bold {
  font-weight: 600;
  border: none;
}

@mixin bold {
  font-weight: 800;
}

@mixin truncate-text {
  text-overflow: ellipsis;
  overflow-x: hidden;
  white-space: nowrap;
}


// POSITIONING
@mixin flex-center($justify-content-val: center) {
  display: flex;
  align-items: center;
  @if $justify-content-val != no-justify {
      justify-content: $justify-content-val;
  }
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fit-container($offset: 0) {
  position: absolute;
  top: 0 + $offset;
  right: 0 + $offset;
  bottom: 0 + $offset;
  left: 0 + $offset;
}


// ANIMATION
// The 'anim-hide' and 'anim-show' mixins help with revealing and hiding with a transition.
// display: none; doesn't tween to display: block; – so opacity must be used.
// However, simply changing the opacity just makes it transparent – the element
// is still part of the DOM and can be interacted with.
// The 'visibility' property will hide the element from the DOM after it is tweened.
$default-transition: all .3s $long-ease-out;

@mixin anim-show($transition: $default-transition) {
  opacity: 1;
  visibility: visible;
  transition: $transition;
}

@mixin anim-hide($transition: $default-transition) {
  opacity: 0;
  visibility: hidden;
  transition: $transition;
}

@mixin fade-in-initial($direction: 'in', $transition: $default-transition, $offset: 15px) {
  @include anim-hide($transition);

  @if $direction == 'up' {
    transform: translateY($offset);
  }
  @else if $direction == 'right' {
    transform: translateX($offset);
  }
  @else if $direction == 'down' {
    transform: translateY(-$offset);
  }
  @else if $direction == 'left' {
    transform: translateX(-$offset);
  }
}

@mixin fade-in-active($transition: $default-transition) {
  @include anim-show($transition);
  transform: none;
}

@mixin fade-in-constructor($direction: 'in', $transition: $default-transition, $offset: 15px) {
  &.fade-#{$direction}-appear,
  &.fade-#{$direction}-enter {
    @include fade-in-initial($direction, $transition, $offset);
  }

  &.fade-#{$direction}-exit,
  &.fade-#{$direction}-appear-active,
  &.fade-#{$direction}-enter-active,
  &.fade-#{$direction}-enter-done {
    @include fade-in-active($transition);
  }

  &.fade-#{$direction}-exit-active,
  &.fade-#{$direction}-exit-done {
    @include fade-in-initial($direction, $transition, $offset);
  }
}
